{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniru\\\\OneDrive\\\\Desktop\\\\SmartSkin\\\\smartskin-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check for token in localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Set up axios interceptor to include the token in every request\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await axios.post('/api/auth/verify', {\n        token\n      });\n      if (response.data.valid) {\n        setUser(response.data.user);\n\n        // Fetch additional user details after token verification\n        try {\n          const profileData = await fetchUserProfile();\n          setUser(prevUser => ({\n            ...prevUser,\n            ...profileData\n          }));\n        } catch (profileError) {\n          console.error('Error fetching profile after token verification:', profileError);\n        }\n      } else {\n        localStorage.removeItem('token');\n        toast.error(\"Session expired. Please login again.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Token verification error:', error);\n      localStorage.removeItem('token');\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Authentication error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      await verifyToken(token);\n      toast.success('Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        email,\n        password,\n        name\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      await verifyToken(token);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const fetchUserProfile = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      const response = await axios.get('/api/user/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data) {\n        return response.data;\n      } else {\n        throw new Error('No profile data received');\n      }\n    } catch (error) {\n      var _error$response4;\n      console.error('Failed to fetch profile:', error);\n      // Only show toast if it's not just for initialization\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) !== 401) {\n        toast.error('Failed to fetch profile data');\n      }\n      throw error;\n    }\n  };\n  const updatePreferences = async preferences => {\n    try {\n      const response = await axios.put('/api/user/preferences', preferences);\n      toast.success('Preferences updated');\n\n      // Update the user state with new preferences\n      setUser(prevUser => ({\n        ...prevUser,\n        preferences: preferences\n      }));\n      return response.data;\n    } catch (error) {\n      toast.error('Failed to update preferences');\n      throw error;\n    }\n  };\n  const fetchRoutines = async () => {\n    try {\n      const response = await axios.get('/api/user/routines');\n      return response.data.routines;\n    } catch (error) {\n      toast.error('Failed to fetch routines');\n      throw error;\n    }\n  };\n  const saveRoutine = async routineData => {\n    try {\n      const response = await axios.post('/api/user/routines', routineData);\n      toast.success('Routine saved successfully');\n      return response.data;\n    } catch (error) {\n      toast.error('Failed to save routine');\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user,\n      fetchUserProfile,\n      updatePreferences,\n      fetchRoutines,\n      saveRoutine\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"7+yZn6J2c3ngGSY07PyfRn24fIE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","verifyToken","interceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","eject","response","post","data","valid","profileData","fetchUserProfile","prevUser","profileError","console","removeItem","_error$response","_error$response$data","login","email","password","setItem","success","_error$response2","_error$response2$data","errorMessage","register","name","_error$response3","_error$response3$data","logout","Error","get","_error$response4","status","updatePreferences","preferences","put","fetchRoutines","routines","saveRoutine","routineData","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/aniru/OneDrive/Desktop/SmartSkin/smartskin-app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Check for token in localStorage\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            verifyToken(token);\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    // Set up axios interceptor to include the token in every request\r\n    useEffect(() => {\r\n        const interceptor = axios.interceptors.request.use(\r\n            config => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers.Authorization = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            error => Promise.reject(error)\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.request.eject(interceptor);\r\n        };\r\n    }, []);\r\n\r\n    const verifyToken = async (token) => {\r\n        try {\r\n            const response = await axios.post('/api/auth/verify', { token });\r\n            if (response.data.valid) {\r\n                setUser(response.data.user);\r\n                \r\n                // Fetch additional user details after token verification\r\n                try {\r\n                    const profileData = await fetchUserProfile();\r\n                    setUser(prevUser => ({\r\n                        ...prevUser,\r\n                        ...profileData\r\n                    }));\r\n                } catch (profileError) {\r\n                    console.error('Error fetching profile after token verification:', profileError);\r\n                }\r\n            } else {\r\n                localStorage.removeItem('token');\r\n                toast.error(\"Session expired. Please login again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Token verification error:', error);\r\n            localStorage.removeItem('token');\r\n            setError(error.response?.data?.error || 'Authentication error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const response = await axios.post('/api/auth/login', { email, password });\r\n            const { token } = response.data;\r\n            localStorage.setItem('token', token);\r\n            await verifyToken(token);\r\n            toast.success('Logged in successfully!');\r\n            return { success: true };\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.error || 'Login failed';\r\n            setError(errorMessage);\r\n            toast.error(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    };\r\n\r\n    const register = async (email, password, name) => {\r\n        try {\r\n            const response = await axios.post('/api/auth/register', { email, password, name });\r\n            const { token } = response.data;\r\n            localStorage.setItem('token', token);\r\n            await verifyToken(token);\r\n            toast.success('Registration successful!');\r\n            return { success: true };\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.error || 'Registration failed';\r\n            setError(errorMessage);\r\n            toast.error(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        toast.success('Logged out successfully');\r\n    };\r\n\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('No authentication token found');\r\n            }\r\n            \r\n            const response = await axios.get('/api/user/profile', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            \r\n            if (response.data) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error('No profile data received');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to fetch profile:', error);\r\n            // Only show toast if it's not just for initialization\r\n            if (error.response?.status !== 401) {\r\n                toast.error('Failed to fetch profile data');\r\n            }\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updatePreferences = async (preferences) => {\r\n        try {\r\n            const response = await axios.put('/api/user/preferences', preferences);\r\n            toast.success('Preferences updated');\r\n            \r\n            // Update the user state with new preferences\r\n            setUser(prevUser => ({\r\n                ...prevUser,\r\n                preferences: preferences\r\n            }));\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            toast.error('Failed to update preferences');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const fetchRoutines = async () => {\r\n        try {\r\n            const response = await axios.get('/api/user/routines');\r\n            return response.data.routines;\r\n        } catch (error) {\r\n            toast.error('Failed to fetch routines');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const saveRoutine = async (routineData) => {\r\n        try {\r\n            const response = await axios.post('/api/user/routines', routineData);\r\n            toast.success('Routine saved successfully');\r\n            return response.data;\r\n        } catch (error) {\r\n            toast.error('Failed to save routine');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            loading,\r\n            error,\r\n            login,\r\n            register,\r\n            logout,\r\n            isAuthenticated: !!user,\r\n            fetchUserProfile,\r\n            updatePreferences,\r\n            fetchRoutines,\r\n            saveRoutine\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCE,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACPG,WAAW,CAACH,KAAK,CAAC;IACtB,CAAC,MAAM;MACHH,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMmB,WAAW,GAAGlB,KAAK,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9CC,MAAM,IAAI;MACN,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACPQ,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUV,KAAK,EAAE;MACpD;MACA,OAAOQ,MAAM;IACjB,CAAC,EACDV,KAAK,IAAIa,OAAO,CAACC,MAAM,CAACd,KAAK,CACjC,CAAC;IAED,OAAO,MAAM;MACTZ,KAAK,CAACmB,YAAY,CAACC,OAAO,CAACO,KAAK,CAACT,WAAW,CAAC;IACjD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,WAAW,GAAG,MAAOH,KAAK,IAAK;IACjC,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,kBAAkB,EAAE;QAAEf;MAAM,CAAC,CAAC;MAChE,IAAIc,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACrBtB,OAAO,CAACmB,QAAQ,CAACE,IAAI,CAACtB,IAAI,CAAC;;QAE3B;QACA,IAAI;UACA,MAAMwB,WAAW,GAAG,MAAMC,gBAAgB,CAAC,CAAC;UAC5CxB,OAAO,CAACyB,QAAQ,KAAK;YACjB,GAAGA,QAAQ;YACX,GAAGF;UACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,OAAOG,YAAY,EAAE;UACnBC,OAAO,CAACxB,KAAK,CAAC,kDAAkD,EAAEuB,YAAY,CAAC;QACnF;MACJ,CAAC,MAAM;QACHpB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;QAChCpC,KAAK,CAACW,KAAK,CAAC,sCAAsC,CAAC;MACvD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAA0B,eAAA,EAAAC,oBAAA;MACZH,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDG,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;MAChCxB,QAAQ,CAAC,EAAAyB,eAAA,GAAA1B,KAAK,CAACgB,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsB3B,KAAK,KAAI,sBAAsB,CAAC;IACnE,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAM6B,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACA,MAAMd,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,iBAAiB,EAAE;QAAEY,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzE,MAAM;QAAE5B;MAAM,CAAC,GAAGc,QAAQ,CAACE,IAAI;MAC/Bf,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE7B,KAAK,CAAC;MACpC,MAAMG,WAAW,CAACH,KAAK,CAAC;MACxBb,KAAK,CAAC2C,OAAO,CAAC,yBAAyB,CAAC;MACxC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,CAAC,OAAOhC,KAAK,EAAE;MAAA,IAAAiC,gBAAA,EAAAC,qBAAA;MACZ,MAAMC,YAAY,GAAG,EAAAF,gBAAA,GAAAjC,KAAK,CAACgB,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBlC,KAAK,KAAI,cAAc;MAClEC,QAAQ,CAACkC,YAAY,CAAC;MACtB9C,KAAK,CAACW,KAAK,CAACmC,YAAY,CAAC;MACzB,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEhC,KAAK,EAAEmC;MAAa,CAAC;IAClD;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOP,KAAK,EAAEC,QAAQ,EAAEO,IAAI,KAAK;IAC9C,IAAI;MACA,MAAMrB,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,oBAAoB,EAAE;QAAEY,KAAK;QAAEC,QAAQ;QAAEO;MAAK,CAAC,CAAC;MAClF,MAAM;QAAEnC;MAAM,CAAC,GAAGc,QAAQ,CAACE,IAAI;MAC/Bf,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE7B,KAAK,CAAC;MACpC,MAAMG,WAAW,CAACH,KAAK,CAAC;MACxBb,KAAK,CAAC2C,OAAO,CAAC,0BAA0B,CAAC;MACzC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,CAAC,OAAOhC,KAAK,EAAE;MAAA,IAAAsC,gBAAA,EAAAC,qBAAA;MACZ,MAAMJ,YAAY,GAAG,EAAAG,gBAAA,GAAAtC,KAAK,CAACgB,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpB,IAAI,cAAAqB,qBAAA,uBAApBA,qBAAA,CAAsBvC,KAAK,KAAI,qBAAqB;MACzEC,QAAQ,CAACkC,YAAY,CAAC;MACtB9C,KAAK,CAACW,KAAK,CAACmC,YAAY,CAAC;MACzB,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEhC,KAAK,EAAEmC;MAAa,CAAC;IAClD;EACJ,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBrC,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;IAChC5B,OAAO,CAAC,IAAI,CAAC;IACbR,KAAK,CAAC2C,OAAO,CAAC,yBAAyB,CAAC;EAC5C,CAAC;EAED,MAAMX,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACR,MAAM,IAAIuC,KAAK,CAAC,+BAA+B,CAAC;MACpD;MAEA,MAAMzB,QAAQ,GAAG,MAAM5B,KAAK,CAACsD,GAAG,CAAC,mBAAmB,EAAE;QAClD/B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUV,KAAK;QAAG;MAChD,CAAC,CAAC;MAEF,IAAIc,QAAQ,CAACE,IAAI,EAAE;QACf,OAAOF,QAAQ,CAACE,IAAI;MACxB,CAAC,MAAM;QACH,MAAM,IAAIuB,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAOzC,KAAK,EAAE;MAAA,IAAA2C,gBAAA;MACZnB,OAAO,CAACxB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACA,IAAI,EAAA2C,gBAAA,GAAA3C,KAAK,CAACgB,QAAQ,cAAA2B,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QAChCvD,KAAK,CAACW,KAAK,CAAC,8BAA8B,CAAC;MAC/C;MACA,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAM6C,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC7C,IAAI;MACA,MAAM9B,QAAQ,GAAG,MAAM5B,KAAK,CAAC2D,GAAG,CAAC,uBAAuB,EAAED,WAAW,CAAC;MACtEzD,KAAK,CAAC2C,OAAO,CAAC,qBAAqB,CAAC;;MAEpC;MACAnC,OAAO,CAACyB,QAAQ,KAAK;QACjB,GAAGA,QAAQ;QACXwB,WAAW,EAAEA;MACjB,CAAC,CAAC,CAAC;MAEH,OAAO9B,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZX,KAAK,CAACW,KAAK,CAAC,8BAA8B,CAAC;MAC3C,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMgD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMhC,QAAQ,GAAG,MAAM5B,KAAK,CAACsD,GAAG,CAAC,oBAAoB,CAAC;MACtD,OAAO1B,QAAQ,CAACE,IAAI,CAAC+B,QAAQ;IACjC,CAAC,CAAC,OAAOjD,KAAK,EAAE;MACZX,KAAK,CAACW,KAAK,CAAC,0BAA0B,CAAC;MACvC,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMkD,WAAW,GAAG,MAAOC,WAAW,IAAK;IACvC,IAAI;MACA,MAAMnC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,oBAAoB,EAAEkC,WAAW,CAAC;MACpE9D,KAAK,CAAC2C,OAAO,CAAC,4BAA4B,CAAC;MAC3C,OAAOhB,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZX,KAAK,CAACW,KAAK,CAAC,wBAAwB,CAAC;MACrC,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,oBACIT,OAAA,CAACC,WAAW,CAAC4D,QAAQ;IAACC,KAAK,EAAE;MACzBzD,IAAI;MACJE,OAAO;MACPE,KAAK;MACL4B,KAAK;MACLQ,QAAQ;MACRI,MAAM;MACNc,eAAe,EAAE,CAAC,CAAC1D,IAAI;MACvByB,gBAAgB;MAChBwB,iBAAiB;MACjBG,aAAa;MACbE;IACJ,CAAE;IAAAxD,QAAA,EACGA;EAAQ;IAAA6D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC/D,EAAA,CAtLWF,YAAY;AAAAkE,EAAA,GAAZlE,YAAY;AAwLzB,OAAO,MAAMmE,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG5E,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACsE,OAAO,EAAE;IACV,MAAM,IAAIrB,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOqB,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}