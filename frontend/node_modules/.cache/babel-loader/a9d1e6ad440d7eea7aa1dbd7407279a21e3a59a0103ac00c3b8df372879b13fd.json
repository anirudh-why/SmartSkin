{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniru\\\\OneDrive\\\\Desktop\\\\SmartSkin\\\\smartskin-app\\\\frontend\\\\src\\\\pages\\\\SkinAssessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkinAssessment = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    updatePreferences\n  } = useAuth();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [skinResult, setSkinResult] = useState({\n    type: '',\n    concerns: []\n  });\n\n  // The quiz questions\n  const questions = [{\n    question: \"How does your skin feel a few hours after washing your face?\",\n    options: [{\n      text: \"Tight and dry all over\",\n      score: {\n        dry: 2\n      }\n    }, {\n      text: \"Oily all over\",\n      score: {\n        oily: 2\n      }\n    }, {\n      text: \"Oily in the T-zone (forehead, nose, chin) but normal or dry elsewhere\",\n      score: {\n        combination: 2\n      }\n    }, {\n      text: \"Comfortable and balanced\",\n      score: {\n        normal: 2\n      }\n    }]\n  }, {\n    question: \"How often do you experience breakouts?\",\n    options: [{\n      text: \"Frequently, especially in the T-zone\",\n      score: {\n        oily: 1,\n        acne: 1\n      }\n    }, {\n      text: \"Occasionally\",\n      score: {\n        normal: 1\n      }\n    }, {\n      text: \"Rarely\",\n      score: {\n        dry: 1,\n        normal: 1\n      }\n    }, {\n      text: \"Never\",\n      score: {\n        normal: 1,\n        dry: 1\n      }\n    }]\n  }, {\n    question: \"How does your skin react to new products?\",\n    options: [{\n      text: \"Often becomes red, itchy, or irritated\",\n      score: {\n        sensitive: 2\n      }\n    }, {\n      text: \"Occasionally becomes slightly irritated\",\n      score: {\n        sensitive: 1\n      }\n    }, {\n      text: \"Rarely has a negative reaction\",\n      score: {\n        normal: 1\n      }\n    }, {\n      text: \"Never has a negative reaction\",\n      score: {\n        normal: 1\n      }\n    }]\n  }, {\n    question: \"What skin concerns do you experience most often?\",\n    options: [{\n      text: \"Dryness, flakiness, or tightness\",\n      score: {\n        dry: 1,\n        dryness: 1\n      }\n    }, {\n      text: \"Excess oil and shine\",\n      score: {\n        oily: 1\n      }\n    }, {\n      text: \"Redness or sensitivity\",\n      score: {\n        sensitive: 1,\n        redness: 1\n      }\n    }, {\n      text: \"Fine lines and wrinkles\",\n      score: {\n        aging: 1\n      }\n    }]\n  }, {\n    question: \"How large are your pores?\",\n    options: [{\n      text: \"Large and visible, especially in the T-zone\",\n      score: {\n        oily: 1\n      }\n    }, {\n      text: \"Medium-sized and only visible in some areas\",\n      score: {\n        combination: 1\n      }\n    }, {\n      text: \"Small and barely visible\",\n      score: {\n        dry: 1,\n        normal: 1\n      }\n    }, {\n      text: \"I'm not sure / I don't notice my pores\",\n      score: {\n        normal: 1\n      }\n    }]\n  }];\n  const handleAnswer = optionIndex => {\n    const newAnswers = [...answers, optionIndex];\n    setAnswers(newAnswers);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      analyzeSkinType(newAnswers);\n    }\n  };\n  const analyzeSkinType = allAnswers => {\n    // Calculate scores for each skin type and concern\n    const scores = {\n      oily: 0,\n      dry: 0,\n      combination: 0,\n      normal: 0,\n      sensitive: 0\n    };\n    const concernScores = {\n      acne: 0,\n      dryness: 0,\n      redness: 0,\n      aging: 0\n    };\n    allAnswers.forEach((answerIndex, questionIndex) => {\n      const selectedOption = questions[questionIndex].options[answerIndex];\n\n      // Update skin type scores\n      Object.entries(selectedOption.score).forEach(([key, value]) => {\n        if (key in scores) {\n          scores[key] += value;\n        } else if (key in concernScores) {\n          concernScores[key] += value;\n        }\n      });\n    });\n\n    // Determine the primary skin type\n    let skinType = Object.entries(scores).reduce((a, b) => a[1] > b[1] ? a : b)[0];\n    skinType = skinType.charAt(0).toUpperCase() + skinType.slice(1);\n\n    // Determine top concerns (those with a score > 0)\n    const concerns = Object.entries(concernScores).filter(([_, score]) => score > 0).map(([concern, _]) => concern.charAt(0).toUpperCase() + concern.slice(1));\n    setSkinResult({\n      type: skinType,\n      concerns: concerns\n    });\n    setIsCompleted(true);\n  };\n  const handleSaveResults = async () => {\n    try {\n      await updatePreferences({\n        skin_type: skinResult.type,\n        skin_concerns: skinResult.concerns\n      });\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving skin assessment results:', error);\n      toast.error('Failed to save your skin assessment results');\n    }\n  };\n  const renderQuestion = () => {\n    const question = questions[currentQuestion];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-medium text-gray-900\",\n        children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-medium text-gray-800 mb-4\",\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(index),\n            className: \"w-full text-left px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 hover:border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-all\",\n            children: option.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-indigo-600 h-2.5 rounded-full\",\n          style: {\n            width: `${(currentQuestion + 1) / questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  };\n  const renderResults = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-gray-900 mb-2\",\n          children: \"Your Skin Assessment Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Based on your answers, we've determined your skin profile.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-indigo-50 border border-indigo-100 rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-900 mb-4\",\n          children: [\"Your Skin Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-indigo-600\",\n            children: skinResult.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), skinResult.concerns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-medium text-gray-800 mb-2\",\n            children: \"Key Skin Concerns:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5 text-gray-600\",\n            children: skinResult.concerns.map((concern, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: concern\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"We'll use this information to provide you with personalized skincare recommendations!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveResults,\n          className: \"px-6 py-3 bg-indigo-600 text-white font-medium rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n          children: \"Save Results & Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-indigo-50 to-white pt-16\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto px-4 py-8 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-6 sm:p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-extrabold text-gray-900\",\n            children: \"Skin Type Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-lg text-gray-500\",\n            children: \"Answer 5 simple questions to determine your skin type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), isCompleted ? renderResults() : renderQuestion()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s(SkinAssessment, \"tf4qgPLQkTF1zFvZbaE6saW2V+M=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = SkinAssessment;\nexport default SkinAssessment;\nvar _c;\n$RefreshReg$(_c, \"SkinAssessment\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","toast","jsxDEV","_jsxDEV","SkinAssessment","_s","navigate","updatePreferences","currentQuestion","setCurrentQuestion","answers","setAnswers","isCompleted","setIsCompleted","skinResult","setSkinResult","type","concerns","questions","question","options","text","score","dry","oily","combination","normal","acne","sensitive","dryness","redness","aging","handleAnswer","optionIndex","newAnswers","length","analyzeSkinType","allAnswers","scores","concernScores","forEach","answerIndex","questionIndex","selectedOption","Object","entries","key","value","skinType","reduce","a","b","charAt","toUpperCase","slice","filter","_","map","concern","handleSaveResults","skin_type","skin_concerns","error","console","renderQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","index","onClick","style","width","renderResults","_c","$RefreshReg$"],"sources":["C:/Users/aniru/OneDrive/Desktop/SmartSkin/smartskin-app/frontend/src/pages/SkinAssessment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SkinAssessment = () => {\r\n    const navigate = useNavigate();\r\n    const { updatePreferences } = useAuth();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n    const [skinResult, setSkinResult] = useState({\r\n        type: '',\r\n        concerns: []\r\n    });\r\n\r\n    // The quiz questions\r\n    const questions = [\r\n        {\r\n            question: \"How does your skin feel a few hours after washing your face?\",\r\n            options: [\r\n                { text: \"Tight and dry all over\", score: { dry: 2 } },\r\n                { text: \"Oily all over\", score: { oily: 2 } },\r\n                { text: \"Oily in the T-zone (forehead, nose, chin) but normal or dry elsewhere\", score: { combination: 2 } },\r\n                { text: \"Comfortable and balanced\", score: { normal: 2 } }\r\n            ]\r\n        },\r\n        {\r\n            question: \"How often do you experience breakouts?\",\r\n            options: [\r\n                { text: \"Frequently, especially in the T-zone\", score: { oily: 1, acne: 1 } },\r\n                { text: \"Occasionally\", score: { normal: 1 } },\r\n                { text: \"Rarely\", score: { dry: 1, normal: 1 } },\r\n                { text: \"Never\", score: { normal: 1, dry: 1 } }\r\n            ]\r\n        },\r\n        {\r\n            question: \"How does your skin react to new products?\",\r\n            options: [\r\n                { text: \"Often becomes red, itchy, or irritated\", score: { sensitive: 2 } },\r\n                { text: \"Occasionally becomes slightly irritated\", score: { sensitive: 1 } },\r\n                { text: \"Rarely has a negative reaction\", score: { normal: 1 } },\r\n                { text: \"Never has a negative reaction\", score: { normal: 1 } }\r\n            ]\r\n        },\r\n        {\r\n            question: \"What skin concerns do you experience most often?\",\r\n            options: [\r\n                { text: \"Dryness, flakiness, or tightness\", score: { dry: 1, dryness: 1 } },\r\n                { text: \"Excess oil and shine\", score: { oily: 1 } },\r\n                { text: \"Redness or sensitivity\", score: { sensitive: 1, redness: 1 } },\r\n                { text: \"Fine lines and wrinkles\", score: { aging: 1 } }\r\n            ]\r\n        },\r\n        {\r\n            question: \"How large are your pores?\",\r\n            options: [\r\n                { text: \"Large and visible, especially in the T-zone\", score: { oily: 1 } },\r\n                { text: \"Medium-sized and only visible in some areas\", score: { combination: 1 } },\r\n                { text: \"Small and barely visible\", score: { dry: 1, normal: 1 } },\r\n                { text: \"I'm not sure / I don't notice my pores\", score: { normal: 1 } }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const handleAnswer = (optionIndex) => {\r\n        const newAnswers = [...answers, optionIndex];\r\n        setAnswers(newAnswers);\r\n\r\n        if (currentQuestion < questions.length - 1) {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n        } else {\r\n            analyzeSkinType(newAnswers);\r\n        }\r\n    };\r\n\r\n    const analyzeSkinType = (allAnswers) => {\r\n        // Calculate scores for each skin type and concern\r\n        const scores = {\r\n            oily: 0,\r\n            dry: 0,\r\n            combination: 0,\r\n            normal: 0,\r\n            sensitive: 0\r\n        };\r\n\r\n        const concernScores = {\r\n            acne: 0,\r\n            dryness: 0,\r\n            redness: 0,\r\n            aging: 0\r\n        };\r\n\r\n        allAnswers.forEach((answerIndex, questionIndex) => {\r\n            const selectedOption = questions[questionIndex].options[answerIndex];\r\n            \r\n            // Update skin type scores\r\n            Object.entries(selectedOption.score).forEach(([key, value]) => {\r\n                if (key in scores) {\r\n                    scores[key] += value;\r\n                } else if (key in concernScores) {\r\n                    concernScores[key] += value;\r\n                }\r\n            });\r\n        });\r\n\r\n        // Determine the primary skin type\r\n        let skinType = Object.entries(scores).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n        skinType = skinType.charAt(0).toUpperCase() + skinType.slice(1);\r\n\r\n        // Determine top concerns (those with a score > 0)\r\n        const concerns = Object.entries(concernScores)\r\n            .filter(([_, score]) => score > 0)\r\n            .map(([concern, _]) => concern.charAt(0).toUpperCase() + concern.slice(1));\r\n\r\n        setSkinResult({\r\n            type: skinType,\r\n            concerns: concerns\r\n        });\r\n        setIsCompleted(true);\r\n    };\r\n\r\n    const handleSaveResults = async () => {\r\n        try {\r\n            await updatePreferences({\r\n                skin_type: skinResult.type,\r\n                skin_concerns: skinResult.concerns\r\n            });\r\n            \r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Error saving skin assessment results:', error);\r\n            toast.error('Failed to save your skin assessment results');\r\n        }\r\n    };\r\n\r\n    const renderQuestion = () => {\r\n        const question = questions[currentQuestion];\r\n        \r\n        return (\r\n            <div className=\"space-y-6\">\r\n                <h3 className=\"text-xl font-medium text-gray-900\">\r\n                    Question {currentQuestion + 1} of {questions.length}\r\n                </h3>\r\n                <div className=\"mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-gray-800 mb-4\">\r\n                        {question.question}\r\n                    </h4>\r\n                    <div className=\"space-y-3\">\r\n                        {question.options.map((option, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => handleAnswer(index)}\r\n                                className=\"w-full text-left px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 hover:border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-all\"\r\n                            >\r\n                                {option.text}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                    <div \r\n                        className=\"bg-indigo-600 h-2.5 rounded-full\" \r\n                        style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderResults = () => {\r\n        return (\r\n            <div className=\"space-y-6\">\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">Your Skin Assessment Results</h3>\r\n                    <p className=\"text-gray-500\">Based on your answers, we've determined your skin profile.</p>\r\n                </div>\r\n                \r\n                <div className=\"bg-indigo-50 border border-indigo-100 rounded-lg p-6\">\r\n                    <h4 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                        Your Skin Type: <span className=\"text-indigo-600\">{skinResult.type}</span>\r\n                    </h4>\r\n                    \r\n                    {skinResult.concerns.length > 0 && (\r\n                        <div>\r\n                            <h5 className=\"font-medium text-gray-800 mb-2\">Key Skin Concerns:</h5>\r\n                            <ul className=\"list-disc pl-5 text-gray-600\">\r\n                                {skinResult.concerns.map((concern, index) => (\r\n                                    <li key={index}>{concern}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <div className=\"mt-6\">\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            We'll use this information to provide you with personalized skincare recommendations!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"flex justify-center pt-4\">\r\n                    <button\r\n                        onClick={handleSaveResults}\r\n                        className=\"px-6 py-3 bg-indigo-600 text-white font-medium rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                    >\r\n                        Save Results & Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-b from-indigo-50 to-white pt-16\">\r\n            <div className=\"max-w-2xl mx-auto px-4 py-8 sm:px-6 lg:px-8\">\r\n                <div className=\"bg-white shadow rounded-lg p-6 sm:p-8\">\r\n                    <div className=\"text-center mb-8\">\r\n                        <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n                            Skin Type Assessment\r\n                        </h2>\r\n                        <p className=\"mt-1 text-lg text-gray-500\">\r\n                            Answer 5 simple questions to determine your skin type\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    {isCompleted ? renderResults() : renderQuestion()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkinAssessment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}