{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniru\\\\OneDrive\\\\Desktop\\\\SmartSkin\\\\smartskin-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Configure axios to use the correct base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [silentLoading, setSilentLoading] = useState(false); // Track silent background operations\n\n  useEffect(() => {\n    // Check for token in localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token, true); // Silent verification on app load\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Set up axios interceptor to include the token in every request\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, []);\n  const verifyToken = async (token, silent = false) => {\n    if (silent) setSilentLoading(true);\n    if (!silent) setLoading(true);\n    try {\n      const response = await axios.post('/api/auth/verify', {\n        token\n      });\n      if (response.data.valid) {\n        setUser(response.data.user);\n\n        // Fetch additional user details after token verification\n        try {\n          const profileData = await fetchUserProfile(true);\n          setUser(prevUser => ({\n            ...prevUser,\n            ...profileData\n          }));\n        } catch (profileError) {\n          console.error('Error fetching profile after token verification:', profileError);\n        }\n      } else {\n        localStorage.removeItem('token');\n        if (!silent) toast.error(\"Session expired. Please login again.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Token verification error:', error);\n      localStorage.removeItem('token');\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Authentication error');\n      if (!silent) toast.error(\"Failed to authenticate. Please login again.\");\n    } finally {\n      setLoading(false);\n      if (silent) setSilentLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      await verifyToken(token);\n      toast.success('Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const register = async (email, password, name) => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        email,\n        password,\n        name\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      await verifyToken(token);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const fetchUserProfile = async (silent = false) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      const response = await axios.get('/api/user/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data) {\n        return response.data;\n      } else {\n        throw new Error('No profile data received');\n      }\n    } catch (error) {\n      var _error$response4;\n      console.error('Failed to fetch profile:', error);\n      // Only show toast if specifically requested and not a auth error\n      if (!silent && ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) !== 401) {\n        toast.error('Failed to fetch profile data');\n      }\n      throw error;\n    }\n  };\n  const updatePreferences = async preferences => {\n    try {\n      const response = await axios.put('/api/user/preferences', preferences);\n      toast.success('Preferences updated');\n\n      // Update the user state with new preferences\n      setUser(prevUser => ({\n        ...prevUser,\n        preferences: preferences\n      }));\n      return response.data;\n    } catch (error) {\n      toast.error('Failed to update preferences');\n      throw error;\n    }\n  };\n  const fetchRoutines = async (silent = false) => {\n    try {\n      const response = await axios.get('/api/user/routines');\n      return response.data.routines || [];\n    } catch (error) {\n      if (!silent) {\n        toast.error('Failed to fetch routines');\n      }\n      console.error('Error fetching routines:', error);\n      return [];\n    }\n  };\n  const saveRoutine = async routineData => {\n    try {\n      const response = await axios.post('/api/user/routines', routineData);\n      toast.success('Routine saved successfully');\n      return response.data;\n    } catch (error) {\n      toast.error('Failed to save routine');\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading: loading || silentLoading,\n      error,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user,\n      fetchUserProfile,\n      updatePreferences,\n      fetchRoutines,\n      saveRoutine\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"hwT+6wr8jtXpx43lDVaWTuXZXWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","toast","jsxDEV","_jsxDEV","defaults","baseURL","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","silentLoading","setSilentLoading","token","localStorage","getItem","verifyToken","interceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","eject","silent","response","post","data","valid","profileData","fetchUserProfile","prevUser","profileError","console","removeItem","_error$response","_error$response$data","login","email","password","setItem","success","_error$response2","_error$response2$data","errorMessage","register","name","_error$response3","_error$response3$data","logout","Error","get","_error$response4","status","updatePreferences","preferences","put","fetchRoutines","routines","saveRoutine","routineData","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/aniru/OneDrive/Desktop/SmartSkin/smartskin-app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Configure axios to use the correct base URL\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [silentLoading, setSilentLoading] = useState(false); // Track silent background operations\r\n\r\n    useEffect(() => {\r\n        // Check for token in localStorage\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            verifyToken(token, true); // Silent verification on app load\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    // Set up axios interceptor to include the token in every request\r\n    useEffect(() => {\r\n        const interceptor = axios.interceptors.request.use(\r\n            config => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers.Authorization = `Bearer ${token}`;\r\n                }\r\n                return config;\r\n            },\r\n            error => Promise.reject(error)\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.request.eject(interceptor);\r\n        };\r\n    }, []);\r\n\r\n    const verifyToken = async (token, silent = false) => {\r\n        if (silent) setSilentLoading(true);\r\n        if (!silent) setLoading(true);\r\n        \r\n        try {\r\n            const response = await axios.post('/api/auth/verify', { token });\r\n            if (response.data.valid) {\r\n                setUser(response.data.user);\r\n                \r\n                // Fetch additional user details after token verification\r\n                try {\r\n                    const profileData = await fetchUserProfile(true);\r\n                    setUser(prevUser => ({\r\n                        ...prevUser,\r\n                        ...profileData\r\n                    }));\r\n                } catch (profileError) {\r\n                    console.error('Error fetching profile after token verification:', profileError);\r\n                }\r\n            } else {\r\n                localStorage.removeItem('token');\r\n                if (!silent) toast.error(\"Session expired. Please login again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Token verification error:', error);\r\n            localStorage.removeItem('token');\r\n            setError(error.response?.data?.error || 'Authentication error');\r\n            \r\n            if (!silent) toast.error(\"Failed to authenticate. Please login again.\");\r\n        } finally {\r\n            setLoading(false);\r\n            if (silent) setSilentLoading(false);\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const response = await axios.post('/api/auth/login', { email, password });\r\n            const { token } = response.data;\r\n            localStorage.setItem('token', token);\r\n            await verifyToken(token);\r\n            toast.success('Logged in successfully!');\r\n            return { success: true };\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.error || 'Login failed';\r\n            setError(errorMessage);\r\n            toast.error(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    };\r\n\r\n    const register = async (email, password, name) => {\r\n        try {\r\n            const response = await axios.post('/api/auth/register', { email, password, name });\r\n            const { token } = response.data;\r\n            localStorage.setItem('token', token);\r\n            await verifyToken(token);\r\n            toast.success('Registration successful!');\r\n            return { success: true };\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.error || 'Registration failed';\r\n            setError(errorMessage);\r\n            toast.error(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        toast.success('Logged out successfully');\r\n    };\r\n\r\n    const fetchUserProfile = async (silent = false) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('No authentication token found');\r\n            }\r\n            \r\n            const response = await axios.get('/api/user/profile', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            \r\n            if (response.data) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error('No profile data received');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to fetch profile:', error);\r\n            // Only show toast if specifically requested and not a auth error\r\n            if (!silent && error.response?.status !== 401) {\r\n                toast.error('Failed to fetch profile data');\r\n            }\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updatePreferences = async (preferences) => {\r\n        try {\r\n            const response = await axios.put('/api/user/preferences', preferences);\r\n            toast.success('Preferences updated');\r\n            \r\n            // Update the user state with new preferences\r\n            setUser(prevUser => ({\r\n                ...prevUser,\r\n                preferences: preferences\r\n            }));\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            toast.error('Failed to update preferences');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const fetchRoutines = async (silent = false) => {\r\n        try {\r\n            const response = await axios.get('/api/user/routines');\r\n            return response.data.routines || [];\r\n        } catch (error) {\r\n            if (!silent) {\r\n                toast.error('Failed to fetch routines');\r\n            }\r\n            console.error('Error fetching routines:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const saveRoutine = async (routineData) => {\r\n        try {\r\n            const response = await axios.post('/api/user/routines', routineData);\r\n            toast.success('Routine saved successfully');\r\n            return response.data;\r\n        } catch (error) {\r\n            toast.error('Failed to save routine');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            loading: loading || silentLoading,\r\n            error,\r\n            login,\r\n            register,\r\n            logout,\r\n            isAuthenticated: !!user,\r\n            fetchUserProfile,\r\n            updatePreferences,\r\n            fetchRoutines,\r\n            saveRoutine\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}